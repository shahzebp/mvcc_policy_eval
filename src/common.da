class Request(object):
    def __init__(self, object1_id, object2_id, action):
        self.uuid               = None
        self.object1_id         = object1_id
        self.object2_id         = object2_id
        self.action             = action
        self.cached_updates     = [{}, {}]
        self.client             = None
        self.timestamp          = None
        self.art_delay          = 0
        self.res_delay          = 0
        self.read_only          = True

    def __str__(self):
        return ("\nObject1 ID: {0} \
                \nObject2 ID: {1} \
                \nAction: {2} \
                \nObject1 Cache: {3} \
                \nObject2 Cache: {4} \
                \nClient: {5} \
                \nTimeStamp: {6} \
                \nUUID: {7}     \
                \n"
                .format(
                    self.object1_id,
                    self.object2_id,
                    self.action,
                    self.cached_updates[0],
                    self.cached_updates[1],
                    self.client,
                    self.timestamp,
                    self.uuid))

class Response(object):
    def __init__(self, request, result):
        self.request            = request
        self.result             = result

        self.sub_tent_attr_used = {}
        self.res_tent_attr_used = {}

        self.sub_db_attr_used   = {}
        self.res_db_attr_used   = {}

        self.sub_to_update      = {}
        self.res_to_update      = {}

    def __str__(self):
        return (self.request.__str__() + \
                "Sub attribs used from Cache: {0} \
                \nRes attribs used from Cache: {1} \
                \nSub attribs used from DB: {2} \
                \nRes attribs used from DB: {3} \
                \nSub attribs to Update: {4} \
                \nRes attrubs to Update: {5} \
                \nResult: {6} \
                \n"
                .format(
                    self.sub_tent_attr_used,
                    self.res_tent_attr_used,
                    self.sub_db_attr_used,
                    self.res_db_attr_used,
                    self.sub_to_update,
                    self.res_to_update,
                    self.result))

class DataBaseResponse(object):
    def __init__(self, request):
        self.request                = request
        self.database_attributes    = [{}, {}]
        self.result = False

    def __str__(self):
        return (self.request.__str__() + \
                "Object 1 DB Attributes: {0} \
                 \nObject 2 DB Attributes: {1} \
                 \nResult {2} \
                 \n"
                .format(
                    self.database_attributes[0],
                    self.database_attributes[1],
                    self.result))

class Rule(object):
    def __init__(self, subject_condition, resource_condition, action, subject_update, resource_update):
        self.subject_condition = subject_condition
        self.resource_condition = resource_condition
        self.action = action
        self.subject_update = subject_update
        self.resource_update = resource_update

    def __str__(self):
        return ("\nSubject Condition: {0} \
                 \nResource Condition: {1} \
                 \nAction: {2} \
                 \nSubject Update: {3} \
                 \nResource Update: {4} \
                 \n"
                .format(
                    self.subject_condition,
                    self.resource_condition,
                    self.action,
                    self.subject_update,
                        self.resource_update))
